<?php

class ingress {

	var $log;
	function log($data)
	{
		//error_log($data);
		$l=$this->log;
		$l[]=$data;
		$this->log=$l;
	}
	
	function __construct(){
		$this->log("Construct!");
		# reset playerdata.
		$this->reset_playerdata();
		
		
	}
	
	
	
	
	
	function lookup_email(){
		# user cant be found in validated table, so lets check playerdata.
		$this->log("lookup_email();");
		global $ob_database;
		# check in the log if a user has loggedin
		$sql = "SELECT * FROM ingressv2_log WHERE email='".$this->player->email."' AND action='intel-map-auth' AND guid<>''";
		//echo $sql;
		#$sql = "SELECT * FROM ingress_playerdata WHERE email='".$this->player->email."' AND guid<>'' AND team<>'' AND action='intel-login' ORDER BY id DESC";
		$res = $ob_database->get_array($sql);
		 
		$this->log("".count($res)." occurances in the ingress_playerdata table with complete data.  (action='intel-map-auth')");
		if (count($res)==0){
			$this->log("User hasnt used the Ingress Enhancer browser script.");
			$this->loginmessage ="User hasnt used the Ingress Enhancer browser script. Please <a href='http://ingress.botnyx.com/script/'>download</a> and install.<br>";
			return;
		}
		
	
		

		if(count($res)>0){


			$this->log("DOUBLECHECK BASED ON SUBMITTED DATA!");
			$sql = "SELECT * FROM ingressv2_players WHERE guid = '".$res[0]['guid']."'";
			
			//die($sql);
			$this->log($sql);
			
			$realplayer = $ob_database->get_single($sql);
			
			
			
			if(!$realplayer){
				$this->loginmessage = "Player hasnt been 'seen' on the intel map.  Please use the intel enhancer, and try to spot on of your portals or resonators.";
				$this->log("Player hasnt been 'seen' on the intel map.  Please use the intel enhancer, and try to spot on of your portals or resonators.");
				
			}else {
				
				
				if($realplayer['name']!=$res[0]['nickname']){
					$this->log("Player GUID matches, but the nickname (".$realplayer['name']." != ".$res[0]['nickname'].") doesnt!  WTF HACK!");
					return;
					die("error");	
				};
				
				
				#if($res[0]['team']!=$realplayer['faction']){
					#$this->log("Player GUID matches, but the faction (".$realplayer['faction']." != ".$res[0]['team'].") doesnt!  WTF HACK!");
					#return;
					#die("error");					
				#}
	
				
				
				
				
	
				$this->log("User is verified, insert in the verified db.");	
				
				
				//echo $this->player->email."<pre>";
				//print_r($test);
				//echo "</pre>";
				
				
				$this->player->id 			=  $res[0]['id'];
				$this->player->guid 		=  $res[0]['guid'];
				$this->player->faction 		=  $res[0]['team'];
				$this->player->nickname 	=  $res[0]['nickname'];
				$this->player->verified 	=  TRUE;
				
				
				$this->player->available_invites =  $res[0]['available_invites'];
				$this->player->energy 		=  $res[0]['energy'];
				$this->player->ap 			=  $res[0]['ap'];
				$this->player->lastupdate 	= $realplayer['lastupdated'];
				
				
				$sql = "INSERT INTO ingressv2_verified ( nickname, email, faction, guid, google ) VALUES  
	('".addslashes($this->player->nickname)."','".addslashes($this->player->email)."','".addslashes($this->player->faction)."','".addslashes($this->player->guid)."' ,'".addslashes(json_encode($this->google))."')";
				$res = $ob_database->execute($sql);
				if($res){
					
					$headers  = 'MIME-Version: 1.0' . "\r\n";
					$headers .= 'Content-type: text/html; charset=iso-8859-1' . "\r\n";
					$msg = "<h2>Agent verification completed.</h2><br> Agent realname: ".$this->google['given_name']." ".$this->google['family_name'];
					$msg .= "<img align='right' style='float:right;' src='".$this->google['picture']."' width='100px' height='100px'><br>Agent nickname: ".$this->player->nickname."<br>Agent email: ".$this->player->email."<br>Agent faction: ".$this->player->faction."<br>Agent guid: ".$this->player->guid;
					$msg .= "<br>Agent G+: ".$this->google['link']."<br>Agent gender: ".$this->google['gender'];
					
					$msg .= "<br><br>---------------------------------<br>this email was generated by http://ingress.botnyx.com a system administered by hopper.jerry@gmail.com";
					
					$subject = "Agent verified!";
					$to = "hopper.jerry@gmail.com";
					$headers .= 'To: Jerry Hopper <hopper.jerry@gmail.com>, Timo van Buuren <ikarias@gmail.com>' . "\r\n";
					$headers .= 'From: Agent verification <ingres-tools@botnyx.com>' . "\r\n";
					mail($to, $subject, $msg, $headers);
					
					
					
					$this->loginmessage = "Agent verification completed.<br>You will be granted access to the Googleplus community shortly.";
						
				}
				
			}
		}
		$this->tmp = null;
			
	}
	

	
	function start_auth(){
		global $ob_database;
		# this function is called after the google auth.
		# Google auth fills variables in $this->tmp
		# 
		$this->log("start_auth();");
		#check if email.
		if(!isset($this->tmp['e'])){ $this->tmp['e'] =false; }
		if( $this->tmp['e'] ){
			
			$this->player->email = $this->tmp['e'];
			$this->tmp['e'] = NULL;
			$this->player->ip = $_SERVER['REMOTE_ADDR'];
			
			#lookup player if verified.
			$sql = "SELECT * FROM ingressv2_verified WHERE email='".$this->player->email."'";
			$this->log($sql);
			$res = $ob_database->get_single($sql);
			if($res['email'] && $res['guid']){
				#user exists
				$this->log("User is VALIDATED!");
				$this->player->nickname	= $res['nickname'];
				$this->player->guid		= $res['guid'];
				$this->player->email	= $res['email'];
				$this->player->faction	= $res['faction'];
				$this->player->ip		= $_SERVER['REMOTE_ADDR'];
				$this->player->verified	= TRUE;
				$this->tmp				= NULL;
				$this->player->settings		= (array)json_decode($res['settings']); 
		
		
					
					
			}else{
				#user doesnt exist, start verification check
				$this->log("User cannot be found in the valdated table.");
				$this->lookup_email();
				
					
			}
			
			#lookup email in player-data.
		/*
		
		
		$this->player->nickname
		$this->player->guid
		$this->player->email
		$this->player->faction
		
		
		$this->player->verified
		
		*/
		
		
					
			
			
			
		} else {  
			$this->log("Not logged in!");
			$this->tmp = NULL;
			$this->player->nickname = "Anonymous";
			$this->player->ip = $_SERVER['REMOTE_ADDR'];
		}
		

		
		
			
	}
	
	
	function set_nickname($nick){
		$this->tmp['n']=$nick;
	}
	function set_guid($guid){
		$this->tmp['g']=$guid;
	}
	function set_faction($faction){
		$this->tmp['f']=$faction; 
	}
	function set_email($email){
		$this->tmp['e'] = $email;
	}

	



	function reset_playerdata(){
		$this->log("reset_playerdata();");
		$player['nickname'] = 0;
		$player['guid'] 	= 0;
		$player['email'] 	= 0;
		$player['faction'] 	= 0;
		$player['ip'] 		= 0;
		$player['verified']	= 0;
		$this->player 		= (object) $player;
		
	}



	function ingreslog ($action,$data){
		global $ob_database;
		$sql = "INSERT INTO ingress_log (nickname,email,faction,guid,data,action )VALUE('".$this->player->nickname."', '".$this->player->email."','".$this->player->faction."','".$this->player->guid."','".addslashes($data)."','".addslashes($action)."' )";
		$res = $ob_database->execute($sql);
		return true;
	}

}


/*
$literalObjectDeclared = (object) array(
     'foo' => (object) array(
          'bar' => 'baz',
          'pax' => 'vax'
      ),
      'moo' => 'ui'
   );


#print $literalObjectDeclared->foo->bar; // outputs "baz"!
*/
?>